<Application
    x:Class="Transition.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Transition"
    RequestedTheme="Light">

    <Application.Resources>

        <local:EngrConverter x:Key="EngrConverterComponentValue" 
                             AllowNegativeNumber="False"/>

        <DataTemplate x:Key="symbolGround">
            <Canvas Background="Transparent" Width="40" Height="40">
                <Polyline Points="20,00 20,20 0,20 40,20 20,40 0,20" 
                          Stroke="Black" 
                          StrokeThickness="4"
                          StrokeLineJoin="Round"/>

            </Canvas>
        </DataTemplate>

        <DataTemplate x:Key="symbolWire">
            <Canvas Background="Transparent" Width="80" Height="40">
                <Polyline Points="00,20 80,20" 
                          Stroke="Black" 
                          StrokeThickness="4"
                          StrokeLineJoin="Round"/>

            </Canvas>
        </DataTemplate>

        <DataTemplate x:Key="symbolResistor">
            <Canvas Background="Transparent" Width="80" Height="40">
                <Polyline Points="00,20 12,20 16,10 24,30 32,10 40,30 48,10 56,30 64,10 68,20 80,20"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"
                   StrokeEndLineCap="Round" StrokeStartLineCap="Round"
                          />
            </Canvas>
        </DataTemplate>

        <DataTemplate x:Key="symbolCapacitor">
            <Canvas Background="Transparent" Width="80" Height="40">
                <Polyline Points="00,20 35,20"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="45,20 80,20" Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="35,10 35,30"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="45,10 45,30"  Stroke="Black" StrokeThickness="4"/>
            </Canvas>
        </DataTemplate>

        <DataTemplate x:Key="symbolFdnr">
            <Canvas Background="Transparent" Width="80" Height="40">
                <Polyline Points="00,20 28,20"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="52,20 80,20" Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="28,10 28,30"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="36,10 36,30"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="44,10 44,30"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="52,10 52,30"  Stroke="Black" StrokeThickness="4"/>
            </Canvas>
        </DataTemplate>

        <DataTemplate x:Key="symbolInductor">
            <Canvas Background="Transparent" Width="80" Height="40">
                <Polyline Points="00,20 8,20"  Stroke="Black" StrokeThickness="4"
                            StrokeEndLineCap="Round" StrokeStartLineCap="Round"/>
                <Polyline Points="72,20 80,20"  Stroke="Black" StrokeThickness="4"
                            StrokeEndLineCap="Round" StrokeStartLineCap="Round"/>

                <Path Stroke="Black" StrokeThickness="4">
                    <Path.Data>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigure StartPoint="8,20">
                                    <PathFigure.Segments>
                                        <ArcSegment Size="8,8"  
                                                    Point="24,20"
                                                    SweepDirection="Clockwise"/>

                                    </PathFigure.Segments>
                                </PathFigure>

                                <PathFigure StartPoint="24,20">
                                    <PathFigure.Segments>
                                        <ArcSegment Size="8,8"  
                                                    Point="40,20"
                                                    SweepDirection="Clockwise"/>
                                    </PathFigure.Segments>
                                </PathFigure>

                                <PathFigure StartPoint="40,20">
                                    <PathFigure.Segments>
                                        <ArcSegment Size="8,8"  
                                                    Point="56,20"
                                                    SweepDirection="Clockwise"/>
                                    </PathFigure.Segments>
                                </PathFigure>

                                <PathFigure StartPoint="56,20">
                                    <PathFigure.Segments>
                                        <ArcSegment Size="8,8"  
                                                    Point="72,20"
                                                    SweepDirection="Clockwise"/>
                                    </PathFigure.Segments>
                                </PathFigure>

                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Path.Data>
                </Path>
            </Canvas>
        </DataTemplate>

        <DataTemplate x:Key="symbolTransformer">

            <Canvas Background="Transparent" Width="80" Height="80">
                <Polyline Points="00,00 20,00 20,08"  Stroke="Black" StrokeThickness="4"
                            StrokeEndLineCap="Round" StrokeStartLineCap="Round"/>
                <Polyline Points="20,72 20,80 00,80"  Stroke="Black" StrokeThickness="4"
                            StrokeEndLineCap="Round" StrokeStartLineCap="Round"/>

                <Polyline Points="80,00 60,00 60,08"  Stroke="Black" StrokeThickness="4"
                            StrokeEndLineCap="Round" StrokeStartLineCap="Round"/>
                <Polyline Points="60,72 60,80 80,80"  Stroke="Black" StrokeThickness="4"
                            StrokeEndLineCap="Round" StrokeStartLineCap="Round"/>

                <!-- two dots -->
                <Ellipse Width="6" Height="6" Stroke="Black"
                         Canvas.Left="7"
                         Canvas.Top="10"
                         Fill="Black"/>

                <Ellipse Width="6" Height="6" Stroke="Black"
                         Canvas.Left="67"
                         Canvas.Top="10"
                         Fill="Black"/>

                <Path Stroke="Black" StrokeThickness="4">
                    <Path.Data>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigure StartPoint="20,8">
                                    <PathFigure.Segments>
                                        <ArcSegment Size="8,8"  
                                                    Point="20,24"
                                                    SweepDirection="Clockwise"/>

                                    </PathFigure.Segments>
                                </PathFigure>

                                <PathFigure StartPoint="20,24">
                                    <PathFigure.Segments>
                                        <ArcSegment Size="8,8"  
                                                    Point="20,40"
                                                    SweepDirection="Clockwise"/>
                                    </PathFigure.Segments>
                                </PathFigure>

                                <PathFigure StartPoint="20,40">
                                    <PathFigure.Segments>
                                        <ArcSegment Size="8,8"  
                                                    Point="20,56"
                                                    SweepDirection="Clockwise"/>
                                    </PathFigure.Segments>
                                </PathFigure>

                                <PathFigure StartPoint="20,56">
                                    <PathFigure.Segments>
                                        <ArcSegment Size="8,8"  
                                                    Point="20,72"
                                                    SweepDirection="Clockwise"/>
                                    </PathFigure.Segments>
                                </PathFigure>


                                <PathFigure StartPoint="60,8">
                                    <PathFigure.Segments>
                                        <ArcSegment Size="8,8"  
                                                    Point="60,24"
                                                    SweepDirection="Counterclockwise"/>

                                    </PathFigure.Segments>
                                </PathFigure>

                                <PathFigure StartPoint="60,24">
                                    <PathFigure.Segments>
                                        <ArcSegment Size="8,8"  
                                                    Point="60,40"
                                                    SweepDirection="Counterclockwise"/>
                                    </PathFigure.Segments>
                                </PathFigure>

                                <PathFigure StartPoint="60,40">
                                    <PathFigure.Segments>
                                        <ArcSegment Size="8,8"  
                                                    Point="60,56"
                                                    SweepDirection="Counterclockwise"/>
                                    </PathFigure.Segments>
                                </PathFigure>

                                <PathFigure StartPoint="60,56">
                                    <PathFigure.Segments>
                                        <ArcSegment Size="8,8"  
                                                    Point="60,72"
                                                    SweepDirection="Counterclockwise"/>
                                    </PathFigure.Segments>
                                </PathFigure>


                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Path.Data>
                </Path>
            </Canvas>
        </DataTemplate>

        <DataTemplate x:Key="symbolPotentiometer">
            <Canvas Background="Transparent" Width="80" Height="120">
                <Polyline Points="20,00 20,25 30,30 10,40 30,50 10,60 30,70 10,80 30,90 20,95 20,120"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>

                <Polyline Points="80,60 30,60 40,50 30,60 40,70 30,60"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>
            </Canvas>
        </DataTemplate>

          <DataTemplate x:Key="symbolPotentiometer1MidPoint">
            <Canvas Background="Transparent" Width="80" Height="120">
                <Polyline Points="20,00 20,25 30,30 10,40 30,50 10,60 30,70 10,80 30,90 20,95 20,120"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>

                <Polyline Points="80,60 30,60 40,50 30,60 40,70 30,60"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>
                
                <Polyline Points="00,60 15,60"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>
            </Canvas>
        </DataTemplate>

        <DataTemplate x:Key="symbolPotentiometer2MidPoint">
            <Canvas Background="Transparent" Width="80" Height="120">
                <Polyline Points="20,00 20,25 30,30 10,40 30,50 10,60 30,70 10,80 30,90 20,95 20,120"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>

                <Polyline Points="80,60 30,60 40,50 30,60 40,70 30,60"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>
                <Polyline Points="00,40 15,40"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>
                <Polyline Points="00,80 15,80"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>
            </Canvas>
        </DataTemplate>


        <DataTemplate x:Key="symbolPotentiometer3MidPoint">
            <Canvas Background="Transparent" Width="80" Height="120">
                <Polyline Points="20,00 20,25 30,30 10,40 30,50 10,60 30,70 10,80 30,90 20,95 20,120"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>

                <Polyline Points="80,60 30,60 40,50 30,60 40,70 30,60"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>
                <Polyline Points="00,40 15,40"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>
                <Polyline Points="00,60 15,60"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>
                <Polyline Points="00,80 15,80"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>
            </Canvas>
        </DataTemplate>
        
        <DataTemplate x:Key="symbolGenerator">
            <Canvas Background="Transparent" Width="80" Height="80">
                <Polyline Points="40,00 40,16"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>

                <Polyline Points="40,64 40,80"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>

                <Ellipse Width="48" Height="48" Stroke="Black"
                         StrokeThickness="4"
                         Canvas.Left="16"
                         Canvas.Top="16"
                         Fill="Transparent"/>
                <!-- dot -->
                <Ellipse Width="6" Height="6" Stroke="Black"
                         Canvas.Left="37"
                         Canvas.Top="24"
                         Fill="Black"/>

                <!-- two semicircles -->
                <Path Stroke="Black" StrokeThickness="4">
                    <Path.Data>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigure StartPoint="24,40">
                                    <PathFigure.Segments>
                                        <ArcSegment Size="8,8"  
                                                    Point="40,40"
                                                    SweepDirection="Clockwise"/>

                                    </PathFigure.Segments>
                                </PathFigure>

                                <PathFigure StartPoint="40,40">
                                    <PathFigure.Segments>
                                        <ArcSegment Size="8,8"  
                                                    Point="56,40"
                                                    SweepDirection="Counterclockwise"/>
                                    </PathFigure.Segments>
                                </PathFigure>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Path.Data>
                </Path>
            </Canvas>
        </DataTemplate>

        <DataTemplate x:Key="symbolImpedance">
            <Canvas Background="Transparent" Width="80" Height="40">
                <Polyline Points="00,20 10,20"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="70,20 80,20"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="10,5 70,5 70,35 10,35 10,5"  Stroke="Black" StrokeThickness="4"/>

            </Canvas>
        </DataTemplate>

        <DataTemplate x:Key="symbolSCN">
            <Canvas Background="Transparent" Width="80" Height="40">
                <Polyline Points="00,20 10,20"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="70,20 80,20"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="10,5 70,5 70,35 10,35 10,5"  Stroke="Black" StrokeThickness="4"/>

            </Canvas>
        </DataTemplate>

        <DataTemplate x:Key="symbolOpAmp">
            <Canvas Background="Transparent" Width="140" Height="160">
                <Polyline Points="00,40 20,40"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="00,120 20,120"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="20,10 20,150 120,80 20,10"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="120,80 140,80"  Stroke="Black" StrokeThickness="4"/>

                <TextBlock Canvas.Left="30" Canvas.Top="19" Text="-" FontSize="26" FontWeight="Bold"/>
                <TextBlock Canvas.Left="27" Canvas.Top="99" Text="+" FontSize="26" FontWeight="Bold"/>

            </Canvas>
        </DataTemplate>

        <DataTemplate x:Key="symbolTF">
            <Canvas Background="Transparent" Width="140" Height="160">
                <Polyline Points="00,40 20,40"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="00,120 20,120"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="20,10 20,150 120,150 120,10 20,10"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="120,40 140,40"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="120,120 140,120"  Stroke="Black" StrokeThickness="4"/>

                <TextBlock Canvas.Left="30" Canvas.Top="19" Text=">" FontSize="26" FontWeight="Bold"/>
                <TextBlock Canvas.Left="90" Canvas.Top="19" Text=">" FontSize="26" FontWeight="Bold"/>

            </Canvas>
        </DataTemplate>

        <DataTemplate x:Key="symbolSummer">
            <Canvas Background="Transparent" Width="120" Height="120">

                <Polyline Points="60,00 60,20"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>

                <Polyline Points="60,100 60,120"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>

                <Polyline Points="100,60 120,60"
                   Stroke="Black" StrokeLineJoin="Round"
                   StrokeThickness="4"/>

                <Ellipse Width="80" Height="80" Stroke="Black"
                         StrokeThickness="4"
                         Canvas.Left="20"
                         Canvas.Top="20"
                         Fill="Transparent"/>

                <TextBlock Canvas.Left="50" Canvas.Top="30" Text="Σ" 
                           FontSize="40"/>

                <TextBlock Canvas.Left="75" Canvas.Top="39" 
                           Text=">" FontSize="26" FontWeight="Bold"/>

            </Canvas>
        </DataTemplate>

        <DataTemplate x:Key="symbolBuffer">
            <Canvas Background="Transparent" Width="100" Height="80">
                <Polyline Points="00,40 20,40"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="80,40 100,40"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="20,10 20,70 80,40 20,10"  Stroke="Black" StrokeThickness="4"/>


            </Canvas>
        </DataTemplate>

        <DataTemplate x:Key="symbolSpeaker">
            <Canvas Background="Transparent" Width="80" Height="100">
                <Polyline Points="20,00 20,30"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="20,70 20,100"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="00,30 40,30 40,70 00,70 00,30"  Stroke="Black" StrokeThickness="4"/>
                <Polyline Points="40,30 70,10 70,90 40,70 40,30"  Stroke="Black" StrokeThickness="4"/>
                <!-- dot -->
                <Ellipse Width="6" Height="6" Stroke="Black"
                         Canvas.Left="17"
                         Canvas.Top="35"
                         Fill="Black"/>
            </Canvas>
        </DataTemplate>


        <DataTemplate x:Key="resistorParasiticModelCircuit">
            <Canvas Background="Transparent" Width="240" Height="140">
                <ContentControl ContentTemplate="{StaticResource symbolResistor}"
                                Canvas.Left="20" Canvas.Top="80"/>
                <ContentControl ContentTemplate="{StaticResource symbolInductor}"
                                Canvas.Left="100" Canvas.Top="80"/>
                <ContentControl ContentTemplate="{StaticResource symbolCapacitor}"
                                Canvas.Left="60" Canvas.Top="20"/>
                <Line X1="0"   Y1="70" X2="20"  Y2="70"  Stroke="Black" StrokeThickness="4"/>
                <Line X1="180" Y1="70" X2="200" Y2="70"  Stroke="Black" StrokeThickness="4"/>
                <Line X1="20"  Y1="40" X2="20"  Y2="100" Stroke="Black" StrokeThickness="4"/>
                <Line X1="180" Y1="40" X2="180" Y2="100" Stroke="Black" StrokeThickness="4"/>
                <Line X1="20"  Y1="40" X2="60"  Y2="40"  Stroke="Black" StrokeThickness="4"/>
                <Line X1="180" Y1="40" X2="140" Y2="40"  Stroke="Black" StrokeThickness="4"/>
                <TextBlock Text="R"  Canvas.Left="55"  Canvas.Top="60" FontSize="18"/>
                <TextBlock Text="Ls" Canvas.Left="133" Canvas.Top="60" FontSize="18"/>
                <TextBlock Text="Cp" Canvas.Left="90"  Canvas.Top="0"  FontSize="18"/>
            </Canvas>
        </DataTemplate>

        <DataTemplate x:Key="inductorParasiticModelCircuit">
            <Canvas Background="Transparent" Width="240" Height="140">
                <ContentControl ContentTemplate="{StaticResource symbolResistor}"
                                Canvas.Left="120" Canvas.Top="80"/>
                <ContentControl ContentTemplate="{StaticResource symbolInductor}"
                                Canvas.Left="20" Canvas.Top="80"/>
                <ContentControl ContentTemplate="{StaticResource symbolCapacitor}"
                                Canvas.Left="70" Canvas.Top="20"/>
                <Line X1="0" Y1="70" X2="20" Y2="70"
                      Stroke="Black" StrokeThickness="4"/>
                <Line X1="220" Y1="70" X2="240" Y2="70"
                      Stroke="Black" StrokeThickness="4"/>
                <Line X1="20" Y1="40" X2="20" Y2="100"
                      Stroke="Black" StrokeThickness="4"/>
                <Line X1="220" Y1="40" X2="220" Y2="100"
                      Stroke="Black" StrokeThickness="4"/>
                <Line X1="20" Y1="40" X2="70" Y2="40"
                      Stroke="Black" StrokeThickness="4"/>
                <Line X1="220" Y1="40" X2="170" Y2="40"
                      Stroke="Black" StrokeThickness="4"/>
                <TextBlock Text="Rs" Canvas.Left="163" Canvas.Top="60"
                           FontSize="18"/>
                <TextBlock Text="L" Canvas.Left="65" Canvas.Top="60"
                           FontSize="18"/>
                <TextBlock Text="Cp" Canvas.Left="110" Canvas.Top="0"
                           FontSize="18"/>
            </Canvas>
        </DataTemplate>


        <DataTemplate x:Key="capacitorParasiticModelCircuit">
            <Canvas Background="Transparent" Width="320" Height="140">
                <ContentControl ContentTemplate="{StaticResource symbolResistor}"
                                Canvas.Left="120" Canvas.Top="20"/>
                <ContentControl ContentTemplate="{StaticResource symbolInductor}"
                                Canvas.Left="120" Canvas.Top="80"/>
                <ContentControl ContentTemplate="{StaticResource symbolCapacitor}"
                                Canvas.Left="20" Canvas.Top="80"/>
                <ContentControl ContentTemplate="{StaticResource symbolResistor}"
                                Canvas.Left="220" Canvas.Top="80"/>

                <Line X1="0" Y1="70" X2="20" Y2="70"
                      Stroke="Black" StrokeThickness="4"/>
                <Line X1="320" Y1="70" X2="340" Y2="70"
                      Stroke="Black" StrokeThickness="4"/>
                <Line X1="20" Y1="40" X2="20" Y2="100"
                      Stroke="Black" StrokeThickness="4"/>
                <Line X1="320" Y1="40" X2="320" Y2="100"
                      Stroke="Black" StrokeThickness="4"/>
                <Line X1="20" Y1="40" X2="120" Y2="40"
                      Stroke="Black" StrokeThickness="4"/>
                <Line X1="320" Y1="40" X2="220" Y2="40"
                      Stroke="Black" StrokeThickness="4"/>

                <TextBlock Text="C" Canvas.Left="65" Canvas.Top="60"
                           FontSize="18"/>
                <TextBlock Text="Ls" Canvas.Left="163" Canvas.Top="60"
                           FontSize="18"/>
                <TextBlock Text="Rs" Canvas.Left="263" Canvas.Top="60"
                           FontSize="18"/>
                <TextBlock Text="Rp" Canvas.Left="160" Canvas.Top="0"
                           FontSize="18"/>

            </Canvas>
        </DataTemplate>

        
        
        <Style x:Key="EngrNumberBoxStyle" TargetType="TextBox">
            <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}"/>
            <Setter Property="Foreground" Value="{ThemeResource TextControlForeground}"/>
            <Setter Property="Background" Value="{ThemeResource TextControlBackground}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource TextControlBorderBrush}"/>
            <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextControlSelectionHighlightColor}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Grid.Resources>
                                <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid x:Name="ButtonLayoutGrid" Background="{ThemeResource TextControlButtonBackground}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{ThemeResource TextControlButtonBorderBrush}">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="PointerOver">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Opacity" To="0"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <TextBlock x:Name="GlyphElement" AutomationProperties.AccessibilityView="Raw" FontStyle="Normal" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{ThemeResource TextControlButtonForeground}" FontSize="12" HorizontalAlignment="Center" Text="&#xE10A;" VerticalAlignment="Center"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundDisabled}}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundPointerOver}}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundFocused}}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocused}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushFocused}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundFocused}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="RequestedTheme">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Light"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="BorderElement" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" Grid.RowSpan="1" Grid.Row="1"/>
                            <ContentPresenter x:Name="HeaderContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.ColumnSpan="2" FontWeight="Normal" Foreground="{ThemeResource TextControlHeaderForeground}" Margin="0,0,0,8" Grid.Row="0" TextWrapping="{TemplateBinding TextWrapping}" Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                            <ScrollViewer x:Name="ContentElement" AutomationProperties.AccessibilityView="Raw" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsTabStop="False" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" ZoomMode="Disabled"/>
                            <TextBlock x:Name="PlaceholderTextContentPresenter" Grid.ColumnSpan="2" Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForeground}}" IsHitTestVisible="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding PlaceholderText}" TextWrapping="{TemplateBinding TextWrapping}" TextAlignment="{TemplateBinding TextAlignment}"/>
                            <!-- <Button x:Name="DeleteButton" AutomationProperties.AccessibilityView="Raw" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" FontSize="{TemplateBinding FontSize}" IsTabStop="False" MinWidth="34" Margin="{ThemeResource HelperButtonThemePadding}" Grid.Row="1" Style="{StaticResource DeleteButtonStyle}" VerticalAlignment="Stretch" Visibility="Collapsed"/>
                     -->
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
    
</Application>
